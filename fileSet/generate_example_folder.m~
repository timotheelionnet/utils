% the dummy experiment has images files for each of the distinct conditions, 
% multiple wells, time points and color channels. 
% Each well is associated a specific file (e.g. listing a segmentation mask, etc)
nTime = 3;
nChannels = 2;
wells = {'A01','B08','D12'};
condition_names = {'control','drug 1','drug 2'};

%% generate folder
dirName = fullfile(pwd,'example_folder');
mkdir(dirName);
disp('********************************************************************');
disp(['Creating example folder: ',dirName]);
curStr = 'Experiment has the following condition(s): ';
for i=1:numel(condition_names)
    curStr = [curStr,' ',condition_names{i}];
end
disp(curStr);
curStr = 'the following well(s): ';
for i=1:numel(wells)
    curStr = [curStr,' ',wells{i}];
end
disp(curStr);
disp(['Experiment has ',num2str(nTime),' time points and ',...
    num2str(nChannels),' channels.']);

%% generate dummy data files
for i=1:numel(condition_names)
    curDir = fullfile(dirName,condition_names{i});
    mkdir(curDir);
    
    %generate ntime timpoints
    for j=1:nTime
        for k=1:numel(wells)
            for l=1:nChannels
                curStr = ['example file, condition ',condition_names{i},...
                    '; time ', num2str(j),'; well ',wells{k},'; channel ',num2str(l)];
                curFname = ['img',wells{k},num2str(l),'_t',num2str(j),'.txt'];
                fName = fullfile(curDir,curFname);
                fid = fopen(fName,'w');
                fprintf(fid, curStr);
                fclose(fid);
            end
            curStr = ['example mask, condition ',condition_names{i},...
                    '; well ',wells{k}];
            curFname = ['mask',wells{k},'.txt'];
            fName = fullfile(curDir,curFname);
            fid = fopen(fName,'w');
            fprintf(fid, curStr);
            fclose(fid);
        end 
    end
end

%% generate .ini config file

cfg = IniConfig();
cfg.AddSections({'Files'});

% the required input parameters
cfg.AddKeys('Files', {'fileTypes','inFolder','outFolder'}, ...
    {'Img, WellMask',...
    dirName,...
    dirName});

% the name pattern for Img file type
fpattern = [dirName,filesep,'{Condition}/img{Well #3}{Channel}_t{Time}.txt'];
disp(['"Image" files follow the pattern: ',fpattern]);
cfg.AddKeys('Files', {'ImgPattern'}, ...
    {fpattern});

% the name pattern for Mask file type
fpattern = [dirName,filesep,'{Condition}/mask{Well #3}.txt'];
disp(['"Image" files follow the pattern: ',fpattern]);
cfg.AddKeys('Files', {'ImgPattern'}, ...
    {fpattern});

% the options
cfg.AddKeys('Files', {'batchMode','recursive','verbose','useTerminal'}, ...
    {1,1,0,1});

% write to file
cfg.WriteFile(fullfile(dirName,'cfg.ini'));

%% de clutter workspace
clear i j k l curFname fid curStr fName nChannels nTime wells condition_names
