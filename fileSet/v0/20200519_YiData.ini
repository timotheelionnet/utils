; INI file for colocalization of FISH spots

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[Files]                 ; dataset structure, file locations and file naming schemes

; comma-separated list - conditions separated, e.g. conditions = Time, FOV, Channel, DrugTreatment
; avoid spaces/special characters in condition names.
; only used when BatchMode = 1.
; conditions =

; comma-separated list - file types to load into the dataset, e.g. fileTypes = rawImg, Loc, rawMask, ROI
; avoid spaces/special characters in condition names
fileTypes = Img

; lowest level directory that the script will fully explore to look for metadata
inFolder = /Volumes/lionnt01lab/lionnt01labspace/Yi_Fu/03132020RNA FISH

; string - output folder where results are stored
outFolder = /Users/lionnett/Documents/junk/

; boolean 1/0 - whether the script analyzes a single file set or performs batch analysis in a folder
batchMode = 1

; boolean 1/0 - whether the script searches recursively through subfolders (default 0)
recursive = 1

; boolean 1/0 - whether the script outputs MANY comments
verbose = 1

; boolean 1/0 - whether to use Terminal + awk (need awk installed). Avoid if file names have special characters.
useTerminal = 0

; string - pattern for the file names of a fileType.
; e.g. for fileType Loc, the name of the
; parameter holding the corresponding file name pattern should be LocPattern.
; Enter as many Pattern parameters as you have fileTypes entries.
  ; (BatchMode = 1): enter the location of the condition-specific tags within curly braces, e.g.
  ; LocPattern = /path/to/my/directory/*/*/{Channel}someCommonStringInFileNames{Time #3}_{FOV #2}.loc3
  ; * work as wildcards. Make sure that each tag in curly braces matches exactly to a tag name in the conditions list
  ; add # to specify if a field has a constant length in characters,
  ; e.g. {Time #3} means the Time string is 3 chars long
  ; (BatchMode = 0): enter the name of the unique file for each filetype.
; LocPattern = /Users/lionnett/Documents/data/Yi/20200429_test_coloc/{Channel}-GAPDH488,in Cy5, ex Cy3, {FOV}_MMStack_Pos0.ome.loc3
; ROIPattern = /Users/lionnett/Documents/data/Yi/20200429_test_coloc/C3-GAPDH488,in Cy5, ex Cy3, {f}_MMStack_Pos0.ome_mask_cells.tif
ImgPattern = /Volumes/lionnt01lab/lionnt01labspace/Yi_Fu/03132020RNA FISH/GAPDH488,in Cy5, ex Cy3, {Condition}_{FOV}/*.tif

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[Masks] ; Parameters setting whether there are masks (e.g. nuclei images) and how to process them
; string - set to raw if your source are DAPI raw images (then the script
  ; thresholds them), otherwise set to roi
maskSource = roi

; int - region size in pixels over which to smooth the dapi image
  ; before thresholding. Only used if maskSource is set to raw
DAPIKernsize = 10

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[Analysis] ; spot processing parameters: spatial dimensions, gating, etc

; int - number of space dimensions in the data (2 or 3)
nDims = 3

; set to 1 to override metadata pixel sizes and use the dx dy dz values below
ignoreMetadataPixSize = 1

; 1 x 3 double - x,y,z voxel size in nm used only if ignoreMetadataPixSize = 0
; or if the script cannot read the image voxel size.
voxSize = 73, 73, 300

; double - bin size in nm for the histogram of the distances
distBinSize = 100

; double - maximum distance in nm to consider spots paired
dMax = 5000

; double 1 x nChannels array - bin size in intensity counts for the intensity
  ; histogram in each channel (cannot use scientific notation)
intBinSize = 100000, 100000

; double 1 x nChannels array - intensity threshold (in intensity counts)
  ; for each channel (cannot use scientific notation)
thresh = 1500000, 750000

; string - either hist or CDF;
  ; decides of whether to show distance data as normal histograms or CDFs
vizMode = hist

string - method to adjust the distance offset between channels. Can be:
  ; none (no offset correction),
  ; inputValues (set to values below),
  ; median (median of observed distances between mutual nearest neighbors)
  ; mean (mean of observed distances between mutual nearest neighbors)
offsetMethod = median ;

; distance offsets to correct for chromatic offsets/aberrations
  ; (only used if offsetMethod = inputValues).
offsetX = 0 ; distance offset in nm between channels in x dimension
offsetY = 0 ; distance offset in nm between channels in y dimension
offsetZ = 0 ; distance offset in nm between channels in z dimension

; integer: color channel used as a reference when correcting offsets between spot positions
refChannel = 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[Output]
; boolean 1/0 - saves a bunch of stuff images, useful to get a better look at what the various intensity/DAPI gates do
saveAllOuts = 1 ;

; if saveAllOuts selected, display mode of spot images
  ; can be either: square<N> | fastGauss<N> | fineGauss<N>
  ; where <N> is the size of the displayed spot in pixels
spotDisplayMode = fineGauss3
